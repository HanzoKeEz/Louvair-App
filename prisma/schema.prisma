generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                        String    @id @default(cuid())
  name                      String?
  email                     String?   @unique
  emailVerified             DateTime?
  image                     String?
  username                  String?   @unique
  created_at                DateTime  @default(now())
  phoneNumber               String?   @unique
  stripe_current_period_end DateTime?
  stripe_customer_id        String?   @unique
  stripe_price_id           String?
  stripe_subscription_id    String?   @unique
  updated_at                DateTime  @default(now())
  accounts                  Account[]
  orders                    Order[]
  Profile                   Profile[]
  sessions                  Session[]
}

model Order {
  id              String    @id @default(cuid())
  userId          String
  amount          Float
  currency        String
  status          String
  createdDate     DateTime  @default(now())
  paymentIntentID String?   @unique
  user            User      @relation(fields: [userId], references: [id])
  Product         Product[]
}

model Product {
  id          String  @id @default(cuid())
  name        String
  description String?
  unit_amount Float
  image       String?
  quantity    Float   @default(0)
  orderId     String?
  Order       Order?  @relation(fields: [orderId], references: [id])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Icon {
  id        String    @id
  title     String
  href      String
  createdAt DateTime  @default(now())
  updatedAt DateTime
  Profile   Profile[]
}

model MyShow {
  showId             String     @id
  id                 Int
  name               String?
  title              String?
  original_title     String?
  poster_path        String?
  backdrop_path      String?
  overview           String?
  original_language  String
  media_type         MEDIA_TYPE
  status             String?
  tagline            String?
  budget             Int?
  homepage           String?
  imdb_id            String?
  popularity         Float
  vote_average       Float
  vote_count         Int
  release_date       String?
  first_air_date     String?
  last_air_date      String?
  number_of_seasons  Int?
  number_of_episodes Int?
  revenue            Int?
  runtime            Int?
  adult              Boolean    @default(false)
  video              Boolean    @default(false)
  profileId          String?
  Profile            Profile?   @relation(fields: [profileId], references: [id])

  @@index([profileId])
}

model Profile {
  id         String   @id
  userId     String
  name       String
  email      String?
  pin        Int?
  language   LANGUAGE @default(ENGLISH)
  gameHandle String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime
  iconId     String
  MyShow     MyShow[]
  Icon       Icon     @relation(fields: [iconId], references: [id], onDelete: Cascade)
  User       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([iconId])
  @@index([userId])
}

enum LANGUAGE {
  BAHASA_INDONESIA
  BAHASA_MELAYU
  DANSK
  DEUTSCH
  ENGLISH
  ESPANOL
  FILIPINO
  FRANCAIS
  HRVATSKI
  ITALIANO
  HINDI
  BANGLA
  MAGYAR
  NEDERLANDS
  NORSK_BOKMAL
  POLSKI
  PORTUGUES
  ROMANA
  SUOMI
  SVENSKA
  TIENG_VIET
  TURKCE
  CESTINA
}

enum MEDIA_TYPE {
  movie
  tv
}
